{"version":3,"file":"static/js/504.9ddb5892.chunk.js","mappings":"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","sources":["pages/research/Research.tsx","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.esm.js","../node_modules/@chakra-ui/button/dist/index.esm.js","../node_modules/@chakra-ui/image/dist/index.esm.js"],"sourcesContent":["import { FC } from 'react';\n\nimport { Box, Button, Flex, Image, Stack, Text } from '@chakra-ui/react';\n\nimport { useData } from 'common/data/Data';\nimport { Project } from 'common/data/Data.api';\n\nexport const Research: FC = () => {\n    const { data } = useData();\n\n    const ProjectItem: FC<Project> = ({ image, title, description, link }) => {\n        return (\n            <Flex gap=\"4\" flexDir={{ base: 'column', md: 'row' }}>\n                <Image\n                    src={image}\n                    h={{ base: '300px', md: '240px' }}\n                    w={{ base: '100%', md: '240px' }}\n                    borderRadius=\"xl\"\n                    objectFit=\"cover\"\n                />\n                <Flex flexDir=\"column\" justifyContent=\"space-between\" py=\"2\">\n                    <Box>\n                        <Text fontSize=\"lg\" fontWeight=\"700\">\n                            {title}\n                        </Text>\n                        <Text fontWeight=\"500\" noOfLines={6}>\n                            {description}\n                        </Text>\n                    </Box>\n                    <Button variant=\"link\" mt=\"4\" justifyContent=\"flex-start\" onClick={() => window.open(link)}>\n                        Read More\n                    </Button>\n                </Flex>\n            </Flex>\n        );\n    };\n\n    return (\n        <Box h=\"100%\" w=\"100%\">\n            <Stack spacing=\"10\">\n                {data.projects.map((project) => (\n                    <ProjectItem key={project.id} {...project} />\n                ))}\n            </Stack>\n        </Box>\n    );\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra as chakra3,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\n\n// src/button.tsx\nimport { useMemo as useMemo2 } from \"react\";\n\n// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\n// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ React.createElement(chakra.span, {\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0,\n    ...rest,\n    className: _className\n  }, _children);\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\n// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ React.createElement(Spinner, {\n      color: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\"\n    }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(() => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    position: label ? \"relative\" : \"absolute\",\n    [marginProp]: label ? spacing : 0,\n    fontSize: \"1em\",\n    lineHeight: \"normal\",\n    ...__css\n  }), [__css, label, marginProp, spacing]);\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: _className,\n    ...rest,\n    __css: spinnerStyles\n  }, children);\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\n// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\n// src/button.tsx\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo2(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ React.createElement(chakra3.button, {\n    disabled: isDisabled || isLoading,\n    ref: useMergeRefs(ref, _ref),\n    as,\n    type: type ?? defaultType,\n    \"data-active\": dataAttr(isActive),\n    \"data-loading\": dataAttr(isLoading),\n    __css: buttonStyles,\n    className: cx(\"chakra-button\", className),\n    ...rest\n  }, isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--start\",\n    label: loadingText,\n    placement: \"start\",\n    spacing: iconSpacing\n  }, spinner), isLoading ? loadingText || /* @__PURE__ */ React.createElement(chakra3.span, {\n    opacity: 0\n  }, /* @__PURE__ */ React.createElement(ButtonContent, {\n    ...contentProps\n  })) : /* @__PURE__ */ React.createElement(ButtonContent, {\n    ...contentProps\n  }), isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--end\",\n    label: loadingText,\n    placement: \"end\",\n    spacing: iconSpacing\n  }, spinner));\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, leftIcon && /* @__PURE__ */ React.createElement(ButtonIcon, {\n    marginEnd: iconSpacing\n  }, leftIcon), children, rightIcon && /* @__PURE__ */ React.createElement(ButtonIcon, {\n    marginStart: iconSpacing\n  }, rightIcon));\n}\n\n// src/button-group.tsx\nimport {\n  chakra as chakra4,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\nimport { useMemo as useMemo3 } from \"react\";\nvar ButtonGroup = forwardRef2(function ButtonGroup2(props, ref) {\n  const {\n    size,\n    colorScheme,\n    variant,\n    className,\n    spacing = \"0.5rem\",\n    isAttached,\n    isDisabled,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__group\", className);\n  const context = useMemo3(() => ({ size, colorScheme, variant, isDisabled }), [size, colorScheme, variant, isDisabled]);\n  let groupStyles = {\n    display: \"inline-flex\"\n  };\n  if (isAttached) {\n    groupStyles = {\n      ...groupStyles,\n      \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n      \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n      \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 }\n    };\n  } else {\n    groupStyles = {\n      ...groupStyles,\n      \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing }\n    };\n  }\n  return /* @__PURE__ */ React.createElement(ButtonGroupProvider, {\n    value: context\n  }, /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    role: \"group\",\n    __css: groupStyles,\n    className: _className,\n    \"data-attached\": isAttached ? \"\" : void 0,\n    ...rest\n  }));\n});\nButtonGroup.displayName = \"ButtonGroup\";\n\n// src/icon-button.tsx\nimport { forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nimport { cloneElement as cloneElement2, isValidElement as isValidElement2 } from \"react\";\nvar IconButton = forwardRef3((props, ref) => {\n  const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props;\n  const element = icon || children;\n  const _children = isValidElement2(element) ? cloneElement2(element, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : null;\n  return /* @__PURE__ */ React.createElement(Button, {\n    padding: \"0\",\n    borderRadius: isRound ? \"full\" : void 0,\n    ref,\n    \"aria-label\": ariaLabel,\n    ...rest\n  }, _children);\n});\nIconButton.displayName = \"IconButton\";\nexport {\n  Button,\n  ButtonGroup,\n  ButtonSpinner,\n  IconButton,\n  useButtonGroup\n};\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport {\n  Image2 as Image,\n  Img,\n  shouldShowFallbackImage,\n  useImage\n};\n"],"names":["Research","data","useData","ProjectItem","image","title","description","link","gap","flexDir","base","md","src","h","w","borderRadius","objectFit","justifyContent","py","fontSize","fontWeight","noOfLines","variant","mt","onClick","window","open","spacing","projects","map","project","id","assignRef","ref","value","current","error","Error","mergeRefs","refs","node","forEach","useMergeRefs","useMemo","cx","classNames","filter","Boolean","join","dataAttr","condition","createContext","strict","name","ButtonGroupProvider","useButtonGroup","ButtonIcon","props","children","className","rest","_children","isValidElement","cloneElement","focusable","_className","React","chakra","display","alignSelf","flexShrink","ButtonSpinner","label","placement","Spinner","color","width","height","__css","marginProp","spinnerStyles","alignItems","position","chakra2","displayName","Button","forwardRef","group","styles","useStyleConfig","omitThemingProps","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","spinnerPlacement","as","buttonStyles","useMemo2","_focus","zIndex","appearance","userSelect","whiteSpace","verticalAlign","outline","useState","isButton","setIsButton","useCallback","tagName","useButtonType","_ref","defaultType","contentProps","chakra3","disabled","opacity","ButtonContent","marginEnd","marginStart","forwardRef2","size","colorScheme","isAttached","context","useMemo3","groupStyles","borderEndRadius","borderStartRadius","chakra4","role","forwardRef3","icon","isRound","ariaLabel","element","isValidElement2","cloneElement2","padding","NativeImage","htmlWidth","htmlHeight","alt","Image2","fallbackSrc","fallback","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","setStatus","useEffect","imageRef","useRef","load","flush","img","Image","srcset","onload","event","onerror","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectPosition","object","keysToOmit","clone","Object","assign","key","omit"],"sourceRoot":""}